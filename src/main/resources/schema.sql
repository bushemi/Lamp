DROP TABLE IF EXISTS PERSON;
DROP TABLE IF EXISTS FRIENDSHIP;
DROP TABLE IF EXISTS MESSAGE;
DROP TABLE IF EXISTS PLACE;
DROP TABLE IF EXISTS POST;
DROP TABLE IF EXISTS POST_LIKES;
DROP TABLE IF EXISTS HOBBY;


CREATE TABLE PERSON (
       ID INT NOT NULL AUTO_INCREMENT
     , FIRST_NAME VARCHAR(128) NOT NULL
     , LAST_NAME VARCHAR(128) NOT NULL
     , BIRTHDAY DATE
     , NICKNAME VARCHAR(128) NOT NULL
     , VERSION INT NOT NULL DEFAULT 0
     , UNIQUE UQ_PERSON_1 (NICKNAME)
     , PRIMARY KEY (ID)
);

CREATE TABLE FRIENDSHIP (
       PERSON_ID INT NOT NULL
     , FRIEND_ID INT NOT NULL
     , FRIENDSHIP_DATE DATE
     , PRIMARY KEY (PERSON_ID, FRIEND_ID)
     , CONSTRAINT FK_FRIENDSHIP_1 FOREIGN KEY (PERSON_ID)
                  REFERENCES PERSON (ID) ON DELETE CASCADE
     , CONSTRAINT FK_FRIENDSHIP_2 FOREIGN KEY (FRIEND_ID)
                  REFERENCES PERSON (ID) ON DELETE CASCADE
);

CREATE TABLE HOBBY (
       ID INT NOT NULL AUTO_INCREMENT
     , TITLE VARCHAR(128) NOT NULL
     , DESCRIPTION VARCHAR(255) NOT NULL
);

CREATE TABLE MESSAGE (
       ID INT NOT NULL AUTO_INCREMENT
     , CONTENT VARCHAR(512) NOT NULL
     , TIME_SENT TIMESTAMP
     , ID_PERSON_FROM INT NOT NULL
     , ID_PERSON_TO INT NOT NULL
     , CONSTRAINT FK_MESSAGE_1 FOREIGN KEY (ID_PERSON_FROM)
                  REFERENCES PERSON (ID) ON DELETE CASCADE
     , CONSTRAINT FK_MESSAGE_2 FOREIGN KEY (ID_PERSON_TO)
                  REFERENCES PERSON (ID) ON DELETE CASCADE
);

CREATE TABLE PLACE (
       ID INT NOT NULL AUTO_INCREMENT
     , TITLE VARCHAR(128) NOT NULL
     , DESCRIPTION VARCHAR(255) NOT NULL
     , LATITUDE DECIMAL(10, 6)
     , LONGITUDE DECIMAL(10, 6)
);

CREATE TABLE POST (
       ID INT NOT NULL AUTO_INCREMENT
     , TITLE VARCHAR(128) NOT NULL
     , DESCRIPTION VARCHAR(255) NOT NULL
     , PLACE_TIME TIMESTAMP
     , PERSON_ID INT NOT NULL
     , CONSTRAINT FK_POST_1 FOREIGN KEY (PERSON_ID)
                  REFERENCES PERSON (ID) ON DELETE CASCADE

);
CREATE TABLE POST_LIKES (
     , PERSON_ID INT NOT NULL
     , POST_ID INT NOT NULL
     , CONSTRAINT FK_POST_LIKES_1 FOREIGN KEY (PERSON_ID)
                  REFERENCES PERSON (ID) ON DELETE CASCADE
     , CONSTRAINT FK_POST_LIKES_2 FOREIGN KEY (POST_ID)
                  REFERENCES POST (ID) ON DELETE CASCADE
);




